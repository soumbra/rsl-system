# Docker Compose unificado - desenvolvimento
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: rsl-postgres
    environment:
      POSTGRES_DB: rsl_system
      POSTGRES_USER: rsl_user
      POSTGRES_PASSWORD: rsl_pass_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rsl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rsl_user -d rsl_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rsl-backend
    ports:
      - "8080:8080"
    environment:
      # ✅ CONECTAR NO CONTAINER postgres (não localhost!)
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/rsl_system
      SPRING_DATASOURCE_USERNAME: rsl_user
      SPRING_DATASOURCE_PASSWORD: rsl_pass_dev
      SPRING_PROFILES_ACTIVE: docker
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rsl-network
    restart: unless-stopped

  # Frontend Vue.js (próximo passo)
  # frontend:
  #   build:
  #     context: ./frontend
  #   ports:
  #     - "5173:5173"
  #   networks:
  #     - rsl-network

volumes:
  postgres_data:

networks:
  rsl-network:
    driver: bridge
