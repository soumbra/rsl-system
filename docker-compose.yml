version: "3.8"

services:
 # PostgreSQL Database
 postgres:
   image: postgres:15
   container_name: rsl-postgres
   environment:
     POSTGRES_DB: rsl_system
     POSTGRES_USER: rsl_user
     POSTGRES_PASSWORD: rsl_pass_dev
   ports:
     - "5432:5432"
   volumes:
     - postgres_data:/var/lib/postgresql/data
   networks:
     - rsl-network
   healthcheck:
     test: ["CMD-SHELL", "pg_isready -U rsl_user -d rsl_system"]
     interval: 10s
     timeout: 5s
     retries: 5
   restart: unless-stopped

 # Backend Spring Boot
 backend:
   build:
     context: ./backend
     dockerfile: Dockerfile
   container_name: rsl-backend
   ports:
     - "8080:8080"
   environment:
     SPRING_PROFILES_ACTIVE: dev
     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/rsl_system
     SPRING_DATASOURCE_USERNAME: rsl_user
     SPRING_DATASOURCE_PASSWORD: rsl_pass_dev
     POSTGRES_USER: rsl_user
     POSTGRES_PASSWORD: rsl_pass_dev
     SPRING_JPA_HIBERNATE_DDL_AUTO: update
     SPRING_JPA_SHOW_SQL: true
   depends_on:
     postgres:
       condition: service_healthy
   networks:
     - rsl-network
   restart: unless-stopped
   healthcheck:
     test: ["CMD-SHELL", "wget -qO- http://localhost:8080/api/health || exit 1"]
     interval: 30s
     timeout: 10s
     retries: 3

 # Frontend Vue.js
 frontend:
   build:
     context: ./frontend
     dockerfile: Dockerfile
     target: development
   container_name: rsl-frontend
   ports:
     - "5173:5173"
   volumes:
     - ./frontend:/app
     - frontend_node_modules:/app/node_modules
   environment:
     - VITE_API_BASE_URL=http://localhost:8080/api
   depends_on:
     - backend
   networks:
     - rsl-network
   restart: unless-stopped

volumes:
 postgres_data:
 frontend_node_modules:

networks:
 rsl-network:
   driver: bridge
